type Query {
  organization: [Organization!]!
  myOrganization: [Organization!]!
}

type Mutation {
  createOrganization(
    createOrganizationInput: CreateOrganizationInput!
  ): Organization!
}

type Mutation {
  updateOrganization(
    updateOrganizationInput: UpdateOrganizationInput!
  ): Organization!
}

input UpdateUserOrganizationInput {
  organizationId: String!
  userId: String!
}

input CreateOrganizationInput {
  name: String!
}

input UpdateOrganizationInput {
  name: String!
  id: String!
}

enum OrganizationEvent {
  OrganizationCreated
  OrganizationDeleted
  OrganizationMemberUpdated
}

type Organization {
  id: String
  name: String!
  users: [OrganizationMember]
  projects: [String!]
  createdAt: Date!
  updatedAt: Date!
}

type OrganizationMember {
  id: String
  invitedAt: String
  role: String
}

scalar Date
